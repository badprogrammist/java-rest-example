<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
           xmlns:oxm="http://www.springframework.org/schema/oxm"  
           xmlns:util="http://www.springframework.org/schema/util"  
           xmlns:mvc="http://www.springframework.org/schema/mvc"  
           xmlns:context="http://www.springframework.org/schema/context"
           xmlns:security="http://www.springframework.org/schema/security"
           xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                                    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
                                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                                    http://www.springframework.org/schema/oxm  
                                    http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd  
                                    http://www.springframework.org/schema/util  
                                    http://www.springframework.org/schema/util/spring-util-3.0.xsd
                                    http://www.springframework.org/schema/security
                                    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!--bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />

<bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
    p:driverClassName="${jdbc.driverClassName}"
    p:url="${jdbc.url}"
    p:username="${jdbc.username}"
    p:password="${jdbc.password}" /-->

    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->
    
    <!--  
          Enables automatic mapping of fund objects to and from JSON  
    -->  
    <mvc:annotation-driven/>
    <!--  
          Setup spring to pull in @Controller, @RequestMapping, etc Configuration scans specified packages  
          for classes configured as Spring managed beans and automatically sets up objects annotated with  
          @Controller, @Service etc.  
    -->  
    <context:component-scan base-package="bp" />  
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <mvc:resources mapping="/**" location="/" />
    
    <!--Security-->
    <bean id="passwordEncoder" class="bp.tasker.security.application.SaltedSHA256PasswordEncoder">
        <constructor-arg value="secret" />
    </bean>
	
    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userRepository">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    
    <security:http
        realm="Protected API"
        use-expressions="true"
        auto-config="false"
        create-session="stateless"
        entry-point-ref="unauthorizedEntryPoint"
        authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <security:intercept-url pattern="/security/authenticate" access="permitAll" />
        <security:intercept-url method="GET" pattern="/user/**" access="hasAnyRole('user','admin')" />
        <security:intercept-url method="PUT" pattern="/user/**" access="hasRole('admin')" />
        <security:intercept-url method="POST" pattern="/user/**" access="hasRole('admin')" />
        <security:intercept-url method="DELETE" pattern="/user/**" access="hasRole('admin')" />
    </security:http>

    <bean id="unauthorizedEntryPoint" class="bp.tasker.security.application.UnauthorizedEntryPoint" />

    <bean id="authenticationTokenProcessingFilter" class="bp.tasker.security.application.AuthenticationTokenProcessingFilter" >
        <constructor-arg ref="userRepository" />
    </bean>
    
    
    
    <!--  
          Configures view for returning JSON to the client  
    -->  
    <!--    <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">  
        <property name="contentType" value="text/plain"/>  
    </bean>  -->
    <!--  
          maps handler methods based on HTTP paths
    -->  
    <!--    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <util:list id="beanList">  
                <ref bean="jsonMessageConverter"/>  
            </util:list>  
        </property>  
    </bean>  -->
    <!--  
          Converts JSON to POJO and vice versa  
    -->  
    <!--<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>-->  
    
    

</beans>
