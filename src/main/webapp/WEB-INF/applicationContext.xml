<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:oxm="http://www.springframework.org/schema/oxm"  
       xmlns:util="http://www.springframework.org/schema/util"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                                    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
                                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                                    http://www.springframework.org/schema/oxm  
                                    http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd  
                                    http://www.springframework.org/schema/util  
                                    http://www.springframework.org/schema/util/spring-util-3.0.xsd
                                    http://www.springframework.org/schema/security
                                    http://www.springframework.org/schema/security/spring-security-3.2.xsd
                                    http://www.springframework.org/schema/tx
                                    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>
    
    <mvc:annotation-driven />
    <!--  
          Setup spring to pull in @Controller, @RequestMapping, etc Configuration scans specified packages  
          for classes configured as Spring managed beans and automatically sets up objects annotated with  
          @Controller, @Service etc.  
    -->  
    <context:component-scan base-package="bp" />  
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <mvc:resources mapping="/**" location="/" />
    
    <!--
        Security
    -->
    <bean id="passwordEncoder" class="bp.tasker.security.SaltedSHA256PasswordEncoder">
        <constructor-arg value="secret" />
    </bean>
	
    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userRepository">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    
    <security:http
        realm="Protected API"
        use-expressions="true"
        auto-config="false"
        create-session="stateless"
        entry-point-ref="unauthorizedEntryPoint"
        authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <security:intercept-url pattern="/security/authenticate" access="permitAll" />
        <security:intercept-url pattern="/security/register" access="permitAll" />
        
        <!--<security:intercept-url method="GET" pattern="/unit/**" access="hasAnyRole('user','admin')" />-->
        <security:intercept-url method="GET" pattern="/unit/**" access="hasRole('user')" />
        <security:intercept-url method="PUT" pattern="/unit/**" access="hasRole('user')" />
        <security:intercept-url method="POST" pattern="/unit/**" access="hasRole('user')" />
        <security:intercept-url method="DELETE" pattern="/unit/**" access="hasRole('user')" />
    </security:http>

    <bean id="unauthorizedEntryPoint" class="bp.tasker.security.UnauthorizedEntryPoint" />

    <bean id="authenticationTokenProcessingFilter" class="bp.tasker.security.AuthenticationTokenProcessingFilter" >
        <constructor-arg ref="userRepository" />
    </bean>
    
    <!--
           DATABASE SETUP 
    -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="username" value="postgres" />
        <property name="password" value="12345" />
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/tasker" />
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceUnitName" value="tasker" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="showSql" value="true" />
            </bean>
        </property>
    </bean>

    <!-- 
        Transactions
    -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/> 
    
    
    

</beans>
